#!/usr/bin/env node

'use strict';

var fs = require('fs');
var path = require('path');
var FontSpider = require('../');
var program = require('commander');
var color = require('../src/color');

program
    .version(require('../package.json').version)
    .usage('[options] <htmlFile ...>')
    .option('--info', 'show only webfont information')
    .option('--ignore <pattern>', 'ignore the files', list)
    .option('--map <remotePath,localPath>', 'mapping the remote path to the local', toMap)
    .option('--log', 'enable debug mode')
    .option('--no-backup', 'do not back up fonts')
    .option('--no-error', 'silently fail on parse errors')
    .parse(process.argv);


function list(args) {
    return args.split(',');
};

function toMap(args) {
    args = list(args);

    var map = [];
    var p = 2;
    var n = args.length / p;
    for (var i = 0; i < n; i ++) {
        map.push([
            args[p * i],
            args[p * i + 1]
        ]);
    }

    return map;
};


var files = program.args;
var options = {};

if (!files.length) {
    program.help();
    process.exit(1);
}

Object.keys(program).forEach(function (key) {
    if (key.indexOf('_') !== 0 && key !== 'args') {
        options[key] = program[key];
    }
});

// 显示 WebFont 信息
if (options.info) {

    writeln('Loading ..');

    options.resourceBeforeLoad = function (file) {
        writeln('Loading ..', color('cyan', file));
    };

    options.resourceError = function (file) {
        writeln('');
    };

    new FontSpider.Spider(files, options)
    .then(function (data) {

        writeln('');
        data.forEach(function (item) {
            process.stdout.write(
                [
                    'Font id: ' + color('cyan', item.id),
                    'Font name: ' + color('cyan', item.name),
                    'Include chars: ' + item.chars,
                    'CSS selector: ' + item.selectors.join(', '),
                    'Font files: \n' +
                        item.files
                        .map(function (val) {
                            return color('cyan', path.relative('./', val));
                        }).join('\n'),
                    '\n'
                ].join('\n')
            );
        });

    }, function (errors) {
        writeln('');
        process.stderr.write(color('red', errors.message) + '\n');
    });


// 处理 WebFont
} else {

    new FontSpider(files, options).catch(function (errors) {
        writeln('');
        process.stderr.write(color('red', errors.message), '\n', errors.stack, '\n');
    });
}



function writeln () {
    var stream = process.stdout;

    if (!stream.isTTY) {
        return;
    }

    stream.clearLine();
    stream.cursorTo(0);
    stream.write(Array.prototype.join.call(arguments, ' '));
}


